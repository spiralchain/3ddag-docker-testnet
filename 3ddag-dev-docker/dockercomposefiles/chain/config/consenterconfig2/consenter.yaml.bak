# Copyright Spiralchain 2018 All Rights Reserved.
#
# SPDX-License-Identifier: Apache-2.0
#

---
################################################################################
#
#   Consenter Configuration
#
#   - This controls the type and configuration of the consenter.
#
################################################################################
General:

    # Ledger Type: The ledger type to provide to the consenter.
    # Two non-production ledger types are provided for test purposes only:
    #  - ram: An in-memory ledger whose contents are lost on restart.
    #  - json: A simple file ledger that writes dagHubRouteses to disk in JSON format.
    # Only one production ledger type is provided:
    #  - file: A production file-based ledger.
    LedgerType: graph

    # Listen address: The IP on which to bind to listen.
    ListenAddress: 127.0.0.1

    # Listen port: The port on which to bind to listen.
    ListenPort: 8050

    # The IP on which to broadcast, should be replaced using p2p gossip way
    BroadcastAddresses: 127.0.0.1:7050;127.0.0.1:9050
    
    # Consenter group size
    ConsenterGroupSize: 3    
    
    # TLS: TLS settings for the GRPC server.
    TLS:
        Enabled: false
        PrivateKey: tls/server.key
        Certificate: tls/server.crt
        RootCAs:
          - tls/ca.crt
        ClientAuthRequired: false
        ClientRootCAs:

    # Keepalive settings for the GRPC server.
    Keepalive:
        # ServerMinInterval is the minimum permitted time between client pings.
        # If clients send pings more frequently, the server will
        # disconnect them.
        ServerMinInterval: 60s
        # ServerInterval is the time between pings to clients.
        ServerInterval: 7200s
        # ServerTimeout is the duration the server waits for a response from
        # a client before closing the connection.
        ServerTimeout: 20s

    # Log Level: The level at which to log. This accepts logging specifications
    # per: fabric/docs/Setup/logging-control.md
    LogLevel: debug

    # Log Format:  The format string to use when logging.  Especially useful to disable color logging
    LogFormat: '%{color}%{time:2006-01-02 15:04:05.000 MST} [%{module}] %{shortfunc} -> %{level:.4s} %{id:03x}%{color:reset} %{message}'

    # Genesis method: The method by which the genesis dagHubRoutese for the consenter
    # system channel is specified. Available options are "provisional", "file":
    #  - provisional: Utilizes a genesis profile, specified by GenesisProfile,
    #                 to dynamically generate a new genesis dagHubRoutese.
    #  - file: Uses the file provided by GenesisFile as the genesis dagHubRoutes.
    GenesisMethod: file

    # Genesis profile: The profile to use to dynamically generate the genesis
    # dagHubRoutese to use when initializing the consenter system channel and
    # GenesisMethod is set to "provisional". See the configtx.yaml file for the
    # descriptions of the available profiles. Ignored if GenesisMethod is set to
    # "file".
    GenesisProfile: SampleInsecureSolo

    # Genesis file: The file containing the genesis dagHubRoutese to use when
    # initializing the consenter system chain and GenesisMethod is set to
    # "file". Ignored if GenesisMethod is set to "provisional".
    GenesisFile: ../DefaultDag_0.dhr

    # LocalMSPDir is where to find the private crypto material needed by the
    # consenter. It is set relative here as a default for dev environments but
    # should be changed to the real location in production.
    LocalMSPDir: msp

    # LocalMSPID is the identity to register the local MSP material with the MSP
    # manager. IMPORTANT: The local MSP ID of an consenter needs to match the MSP
    # ID of one of the organizations defined in the consenter system channel's
    # /Chain/Consenter configuration. The sample organization defined in the
    # sample configuration provided has an MSP ID of "SampleOrg".
    LocalMSPID: SampleOrg

    # Enable an HTTP service for Go "pprof" profiling as documented at:
    # https://golang.org/pkg/net/http/pprof
    Profile:
        Enabled: false
        Address: 0.0.0.0:6060

    # BCCSP configures the dagHubRoutesechain crypto service providers.
    BCCSP:
        # Default specifies the preferred dagHubRoutesechain crypto service provider
        # to use. If the preferred provider is not available, the software
        # based provider ("SW") will be used.
        # Valid providers are:
        #  - SW: a software based crypto provider
        #  - PKCS11: a CA hardware security module crypto provider.
        Default: SW

        # SW configures the software based dagHubRoutesechain crypto provider.
        SW:
            # TODO: The default Hash and Security level needs refactoring to be
            # fully configurable. Changing these defaults requires coordination
            # SHA2 is hardcoded in several places, not only BCCSP
            Hash: SHA2
            Security: 256
            # Location of key store. If this is unset, a location will be
            # chosen using: 'LocalMSPDir'/keystore
            FileKeyStore:
                KeyStore:

    # Authentication contains configuration parameters related to authenticating
    # client messages
    Authentication:
        # the acceptable difference between the current server time and the
        # client's time as specified in a client request message
        TimeWindow: 15m

################################################################################
#
#   SECTION: File Ledger
#
#   - This section applies to the configuration of the file or json ledgers.
#
################################################################################
FileLedger:

    # Location: The directory to store the dagHubRouteses in.
    # NOTE: If this is unset, a new temporary location will be chosen every time
    # the consenter is restarted, using the prefix specified by Prefix.
    Location: /var/spiralchain/production/consenter

    # The prefix to use when generating a ledger directory in temporary space.
    # Otherwise, this value is ignored.
    Prefix: spiralchain-3ddag-consenterledger

################################################################################
#
#   SECTION: RAM Ledger
#
#   - This section applies to the configuration of the RAM ledger.
#
################################################################################
RAMLedger:

    # History Size: The number of dagHubRouteses that the RAM ledger is set to retain.
    # WARNING: Appending a dagHubRoutese to the ledger might cause the oldest dagHubRoutese in
    # the ledger to be dropped in order to limit the number total number dagHubRouteses
    # to HistorySize. For example, if history size is 10, when appending dagHubRoutese
    # 10, dagHubRoutese 0 (the genesis dagHubRoutese!) will be dropped to make room for dagHubRoutese 10.
    HistorySize: 1000

################################################################################
#
#   SECTION: Dgraph
#
#   - This section applies to the configuration of the Dgraph-based consenter, and
#     its interaction with the Dgraph cluster.
#
################################################################################
Dgraph:
    DgraphConfig:
       DgraphAddress: 192.168.5.191:9180
       Username:
       Password:
    # Retry: What do if a connection to the Dgraph cluster cannot be established,
    # or if a metadata request to the Dgraph cluster needs to be repeated.
    Retry:
        # When a new channel is created, or when an existing channel is reloaded
        # (in case of a just-restarted consenter), the consenter interacts with the
        # Dgraph cluster in the following ways:
        # 1. It creates a Dgraph producer (writer) for the Dgraph partition that
        # corresponds to the channel.
        # 2. It uses that producer to post a no-op CONNECT message to that
        # partition
        # 3. It creates a Dgraph consumer (reader) for that partition.
        # If any of these steps fail, they will be re-attempted every
        # <ShortInterval> for a total of <ShortTotal>, and then every
        # <LongInterval> for a total of <LongTotal> until they succeed.
        # Note that the consenter will be unable to write to or read from a
        # channel until all of the steps above have been completed successfully.
        ShortInterval: 5s
        ShortTotal: 10m
        LongInterval: 5m
        LongTotal: 12h
        # Affects the socket timeouts when waiting for an initial connection, a
        # response, or a transmission. See Config.Net for more info:
        # https://godoc.org/github.com/Shopify/sarama#Config
        NetworkTimeouts:
            DialTimeout: 10s
            ReadTimeout: 10s
            WriteTimeout: 10s
        # Affects the metadata requests when the Dgraph cluster is in the middle
        # of a leader election.See Config.Metadata for more info:
        # https://godoc.org/github.com/Shopify/sarama#Config
        Metadata:
            RetryBackoff: 250ms
            RetryMax: 3
        # What to do if posting a message to the Dgraph cluster fails. See
        # Config.Producer for more info:
        # https://godoc.org/github.com/Shopify/sarama#Config
        Producer:
            RetryBackoff: 100ms
            RetryMax: 3
        # What to do if reading from the Dgraph cluster fails. See
        # Config.Consumer for more info:
        # https://godoc.org/github.com/Shopify/sarama#Config
        Consumer:
            RetryBackoff: 2s

    # Verbose: Enable logging for interactions with the Dgraph cluster.
    Verbose: false

    # TLS: TLS settings for the consenter's connection to the Dgraph cluster.
    TLS:

      # Enabled: Use TLS when connecting to the Dgraph cluster.
      Enabled: false

      # PrivateKey: PEM-encoded private key the consenter will use for
      # authentication.
      PrivateKey:
        # As an alternative to specifying the PrivateKey here, uncomment the
        # following "File" key and specify the file name from which to load the
        # value of PrivateKey.
        #File: path/to/PrivateKey

      # Certificate: PEM-encoded signed public key certificate the consenter will
      # use for authentication.
      Certificate:
        # As an alternative to specifying the Certificate here, uncomment the
        # following "File" key and specify the file name from which to load the
        # value of Certificate.
        #File: path/to/Certificate

      # RootCAs: PEM-encoded trusted root certificates used to validate
      # certificates from the Dgraph cluster.
      RootCAs:
        # As an alternative to specifying the RootCAs here, uncomment the
        # following "File" key and specify the file name from which to load the
        # value of RootCAs.
        #File: path/to/RootCAs


################################################################################
#
#   Debug Configuration
#
#   - This controls the debugging options for the consenter
#
################################################################################
Debug:

    # BroadcastTraceDir when set will cause each request to the Broadcast service
    # for this consenter to be written to a file in this directory
    BroadcastTraceDir:

    # FetchTraceDir when set will cause each request to the Fetch service
    # for this consenter to be written to a file in this directory
    FetchTraceDir:
